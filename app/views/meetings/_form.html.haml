%p#notice= notice
= render 'new_client_modal'
= simple_form_for @meeting do |f|

  - if @meeting.errors.any?
    #error_explanation
      %h2
        = pluralize(@meeting.errors.count, "error")
        prohibited this meeting from being saved:
      %ul
        - @meeting.errors.full_messages.each do |msg|
          %li= msg
  .row
    .col-lg-9            
      .row
        .col-lg-4
          %label{for: "meeting_start_date"} Meeting Date
          .input-group
            %span.input-group-addon
              %i.glyphicon.glyphicon-calendar        
            = f.input_field :start_date, class: 'form-control date-picker', placeholder: "date"
        
        .col-lg-3
          = f.input :duration, :collection => (Meeting::DURATION),:input_html =>{ class: 'form-control'}
          
        .col-lg-5
          %label{for: "meeting_client_id"} Select a Client
          = f.input :client_id, collection:(Client.all),label: false ,input_html: { class: 'form-control' }
                 
          
          = link_to 'New Client', 
                    new_client_path, {class:"btn btn-primary btn-lg pull-right ", 
                                      :'data-remote'=>true }
      .row
        .col-lg-12
          = f.input :memo, as: :text ,:input_html => { :rows => 5 , class: 'form-control'}
      %br    
      %hr

    

      .row
        .col-lg-12
          %h3 Follow Ups:
          .followups_div
            
            %br
            = f.simple_fields_for :follow_ups do |ff|
              = render 'followup_fields', ff: ff

          %button#addFollowup.btn.btn-primary.glyphicon.glyphicon-plus-sign{type: "button", title: "Add Follow Ups!"}
          -if @followup_is_empty
            %button#edit_addBtn.btn.btn-primary.glyphicon.glyphicon-plus-sign{type: "button", title: "Add Follow Ups!"}

          %br
          %br
          %br 

    .col-lg-3
      .panel.panel-default        
        .panel-body
          .row        
            %h4 Assign Sales Reps:
            - for sr in SalesRep.all
              = check_box_tag "sales_reps_ids[]" ,sr.id , @meeting.sales_reps.include?(sr)
              = sr.name
              %br
          
          %hr

          .row       
            %h4 Assign Contacts:
            #container.hide        
              =link_to image_tag("ajax-loader.gif")

            #checkboxes
                      
              -if @contacts.nil?
                %p Please Select a Client.
              -else
                - for c in @contacts
                  = check_box_tag "contact_ids[]", c.id, @meeting.contacts.include?(c)
                  = c.name
                  %br
            %button#addContact.btn{type: "button"} Add contact
            %br
            = render 'contact_fields'
                 
             
  
  = f.button :submit , class: "btn-success"




  :javascript
    $(document).ready(function (){
    // Caching the Variables .
      var loading         = $('#container');
      var checkboxes      = $('#checkboxes');
      var add_btn         = $('#addContact'); 
      var contacts_fields = $('#fields');
      var submit          = $('#submit');
      var num             = $('.followup').length ;
      var select_client   = $('#meeting_client_id');

      var checked_chkbox  = checkboxes.children('input:checked').map(function(){ return this.value; });
      
      console.log(checked_chkbox);

      $('.alert').hide();

      

      contacts_fields.hide();
      //add_btn.hide();
      //select_client.trigger('change');

    // This was added to capture the Enter key press on the add contact field, and triger the submit button,
    // without it, the meeting form is submited instead.  
    $('#last_name').keypress(function(e){
      if (e.which == 13 ){
        e.preventDefault();
        submit.click();        
      };
    });

    // This button will Show the new Contact fields.
      add_btn.click(function() {        
        contacts_fields.slideDown();        
      });

    // This button will hide the new Contact fileds (cancel).
      $('#cancel').click(function() {
        contacts_fields.slideUp();
      });

      $('#addFollowup').click(function(){        
        var cloned = $('fieldset:first').clone(true);

        cloned.find('input,select,textarea').each(function() {
          //var num = $('.followup').length;
          var i = $(this).attr("id").replace(/\d+/, num);
          var n = $(this).attr("name").replace(/\d+/, num);
          $(this).val(""); // to clean the cloned fields, Needed only for Edit view, should get fixed.

          $(this).attr({
            name: n,
            id: i
          });
         if ($(this).is('input'))
          { 
            $(this).removeClass('hasDatepicker');
            $(this).val("");
            $(this).datepicker({ dateFormat: 'dd-mm-yy' });
          }
        })
        num++ ;
        
        cloned.find('.rmvFields').removeClass('hidden');
        cloned.appendTo('.followups_div').hide();
        cloned.slideDown(); 

      });
      // This button removes the followup fields.
      $('.rmvFields').on("click",function() {
        if(confirm("Are you sure you want to delete this followup?"))
        {
          var fieldset = $(this).closest('fieldset'); 
          fieldset.slideUp("normal",function(){
            fieldset.find("input[id$='_destroy']").val("true"); // the hidden _destroy field. 
          
          var followup = fieldset.next().val();
          var jsonObject = { followup_id:  followup  }
          $.ajax({
            type: "POST",
            url: '/meetings/delete_followup/' ,
            data: jsonObject,
            dataType: 'script'
          }); 

          });
        }
      });

    // This button will handle adding new contact submesion.
      submit.click(function() {
        var client_id    = $('#meeting_client_id').val();
        var first_name  = $('#first_name').val();
        var last_name   = $('#last_name').val();
        var dataString  =   client_id + first_name + " " + last_name  
        var jsonObject = { contact: { fn: first_name , ln: last_name }, c_id: client_id }
 
        $.ajax({
          type: "PUT",
          url: '/clients/add_contacts/' + client_id ,
          data:   jsonObject  ,
          dataType: 'script' ,
         })
            //.done(function( msg ){
            //  alert( "Data Saved: " + msg.client );
              // contacts_fields.slideUp();
            // });

      });

      select_client.on("change",function(){
        loading.removeClass("hide"); // The Ajax loader gif .
        add_btn.hide();              // The add contacts button.   
        checkboxes.empty();          // The div that contains the contacts.
        contacts_fields.hide();      // The div for adding new cotacts.         
        var id = this.value;      // The currently selected Client ID .
        if(id != "") 
          {  

            $.getJSON('/clients/client_contacts/' + id, function(data){              
              if( data["contacts"].length == [] ) 
              {  
                loading.addClass("hide");            
                checkboxes.text("No Any contacts for the selected client");
                add_btn.show();                
              }
              else {
                loading.addClass("hide");
                add_btn.show();
                $.each(data.contacts, function () {
                  var name = this.nf + " " + this.nl ;
                  //if this.Id in prev_selected then this.checked = true ; 
                  var chk_box = $('<input name="contact_ids[]" type="checkbox" value="'+this._id+'" >'+name+'</option><br />');

                  if ($.inArray(chk_box.val() , checked_chkbox) != -1)
                  {
                    chk_box.attr('checked', 'checked');
                               
                  }
                  chk_box.appendTo(checkboxes); 
                })
              }          
            })
          }
        else {
          loading.addClass("hide"); 
          checkboxes.text("Please select a client");
          add_btn.hide();
        }
        return false;
      })
      
    });

<!-- <%= f.collection_select :client_id, Client.all, :id, :name %> -->