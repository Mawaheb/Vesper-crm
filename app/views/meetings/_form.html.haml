= render 'new_client_modal'
= simple_form_for @meeting do |f|

  - if @meeting.errors.any?
    #error_explanation
      %h2
        = pluralize(@meeting.errors.count, "error")
        prohibited this sales_rep from being saved:
      %ul
        - @meeting.errors.full_messages.each do |msg|
          %li= msg

  .row
    %h4 This meeting is made for :
    %br
    .col-lg-3          
      = f.input :client_id, collection:(Client.all), input_html: { class: 'form-control' }
    .col-lg-6
      = link_to 'New Client', 
                new_client_path, {class:"btn btn-primary btn-lg", 
                                  :'data-remote'=>true }
  
  
  %br
  %hr

  = f.input :start_date, as: :datetime
  = f.input :duration, :collection => (Meeting::DURATION)
  = f.input :memo, as: :text ,:input_html => { :rows => 4 }
  %hr

  .row
    .col-lg-6
      %h4 Assign Sales Reps:
      - for sr in SalesRep.all
        = check_box_tag "sales_reps_ids[]" ,sr.id , @meeting.sales_reps.include?(sr)
        = sr.first_name
        %br 

    
    .col-lg-6
       
      %h4 Assign Contacts:
      #container.hide        
        =link_to image_tag("ajax-loader.gif")

      #checkboxes
                
        -if @contacts.nil?
          %p Please Select a Client.
        -else
          - for c in @contacts
            = check_box_tag "contact_ids[]", c.id, @meeting.contacts.include?(c)
            = c.first_name
            %br
      %button#addContact.btn{type: "button"} Add contact
      %br
      = render 'contact_fields'
             
  %hr      
 


  %h4 Any follow Ups ?

  = f.simple_fields_for :follow_ups do |ff|
    = ff.input :type, collection: (FollowUp::TYPES), required: false
    = ff.input :done, as: :select , required: false
    = ff.input :status , required: false
    = ff.input :due_date , as: :date , required: false, disabled: true,
      hint: 'Only the assigned user can estimate the Due date.'
    = ff.input :complete_date, as: :date , required: false
    = ff.input :memo, as: :text ,:input_html => { :rows => 4 } , required: false
    = ff.input :sales_rep_id , label: "Assign to" , collection: (SalesRep.all)


  
  = f.button :submit




  :javascript
    $(document).ready(function (){
      var loading         = $('#container');
      var checkboxes      = $('#checkboxes') ;
      var add_btn         = $('#addContact'); 
      var contacts_fields = $('#fields');
      var submit          = $('#submit');

      contacts_fields.hide();
      add_btn.hide();

      add_btn.click(function() {        
        contacts_fields.slideDown();        
      });

      $('#cancel').click(function() {
        contacts_fields.slideUp();
      });

      $('#meeting_client_id').change(function(){
        loading.removeClass("hide"); 
        checkboxes.empty();
        contacts_fields.hide();         
        var state = this.value;
        if(state != "") 
          {            
            $.getJSON('/clients/client_contacts/' + state, function(data){              
              if( data["contacts"].length == [] ) 
              {  
                loading.addClass("hide");            
                checkboxes.text("No Any contacts for the selected client");
                add_btn.show();                
              }
              else {
                loading.addClass("hide");
                add_btn.hide();
                $.each(data.contacts, function () {
                var name = this.nf + " " + this.nl ;
                $('<input name="contact_ids[]" type="checkbox" value="'+this._id+'">'+name+'</option><br />').appendTo(checkboxes);               
                })
              }          
            })
          }
        else {
          loading.addClass("hide"); 
          checkboxes.text("Please select a client");
          add_btn.hide();
        }
        return false;
      })
    });

<!-- <%= f.collection_select :client_id, Client.all, :id, :name %> -->